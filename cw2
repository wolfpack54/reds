provider "aws" {
  region = "us-west-2"  # Update with your desired region
}

# Variables to distinguish prod and non-prod configurations
variable "environment" {
  type    = string
  default = "prod"  # Change to "non-prod" for non-prod configuration
}

# Dynamic thresholds based on environment
locals {
  cpu_util_threshold    = var.environment == "prod" ? 75 : 50
  memory_util_threshold = var.environment == "prod" ? 80 : 60
  db_connections_threshold = var.environment == "prod" ? 500 : 200
}

# Redshift Cluster Identifier
variable "redshift_cluster_identifier" {
  type    = string
  default = "my-redshift-cluster"  # Update with your Redshift cluster identifier
}

# CloudWatch Alarm for CPU Utilization
resource "aws_cloudwatch_metric_alarm" "cpu_utilization" {
  alarm_name                = "${var.environment}-redshift-cpu-utilization-alarm"
  comparison_operator       = "GreaterThanOrEqualToThreshold"
  evaluation_periods        = 2
  metric_name               = "CPUUtilization"
  namespace                 = "AWS/Redshift"
  period                    = 300
  statistic                 = "Average"
  threshold                 = local.cpu_util_threshold
  alarm_description         = "Alarm when CPU Utilization exceeds the threshold for ${var.environment} Redshift cluster"
  actions_enabled           = true
  alarm_actions             = [aws_sns_topic.alarm_topic.arn]
  ok_actions                = [aws_sns_topic.alarm_topic.arn]
  dimensions = {
    ClusterIdentifier = var.redshift_cluster_identifier
  }
}

# CloudWatch Alarm for Memory Utilization (Custom Metric)
resource "aws_cloudwatch_metric_alarm" "memory_utilization" {
  alarm_name                = "${var.environment}-redshift-memory-utilization-alarm"
  comparison_operator       = "GreaterThanOrEqualToThreshold"
  evaluation_periods        = 2
  metric_name               = "MemoryUtilization" # Assuming a custom metric is pushed to CloudWatch
  namespace                 = "CustomNamespace/Redshift"
  period                    = 300
  statistic                 = "Average"
  threshold                 = local.memory_util_threshold
  alarm_description         = "Alarm when Memory Utilization exceeds the threshold for ${var.environment} Redshift cluster"
  actions_enabled           = true
  alarm_actions             = [aws_sns_topic.alarm_topic.arn]
  ok_actions                = [aws_sns_topic.alarm_topic.arn]
  dimensions = {
    ClusterIdentifier = var.redshift_cluster_identifier
  }
}

# CloudWatch Alarm for Database Connections
resource "aws_cloudwatch_metric_alarm" "database_connections" {
  alarm_name                = "${var.environment}-redshift-database-connections-alarm"
  comparison_operator       = "GreaterThanOrEqualToThreshold"
  evaluation_periods        = 2
  metric_name               = "DatabaseConnections"
  namespace                 = "AWS/Redshift"
  period                    = 300
  statistic                 = "Average"
  threshold                 = local.db_connections_threshold
  alarm_description         = "Alarm when Database Connections exceed the threshold for ${var.environment} Redshift cluster"
  actions_enabled           = true
  alarm_actions             = [aws_sns_topic.alarm_topic.arn]
  ok_actions                = [aws_sns_topic.alarm_topic.arn]
  dimensions = {
    ClusterIdentifier = var.redshift_cluster_identifier
  }
}

# CloudWatch Alarm for Redshift Health
resource "aws_cloudwatch_metric_alarm" "redshift_health" {
  alarm_name                = "${var.environment}-redshift-health-alarm"
  comparison_operator       = "LessThanThreshold"
  evaluation_periods        = 1
  metric_name               = "HealthStatus"
  namespace                 = "AWS/Redshift"
  period                    = 300
  statistic                 = "Minimum"
  threshold                 = 1  # Assuming HealthStatus of 1 means unhealthy
  alarm_description         = "Alarm when Redshift HealthStatus is unhealthy for ${var.environment} cluster"
  actions_enabled           = true
  alarm_actions             = [aws_sns_topic.alarm_topic.arn]
  ok_actions                = [aws_sns_topic.alarm_topic.arn]
  dimensions = {
    ClusterIdentifier = var.redshift_cluster_identifier
  }
}

# SNS Topic for Alarm Actions
resource "aws_sns_topic" "alarm_topic" {
  name = "${var.environment}-redshift-alarms-topic"
}

# Example SNS Topic Subscription for notifications
resource "aws_sns_topic_subscription" "alarm_subscription" {
  topic_arn = aws_sns_topic.alarm_topic.arn
  protocol  = "email"
  endpoint  = "your-email@example.com"  # Replace with your email address for notifications
}
